[
  {
    "inputs": [],
    "name": "CannotFindNextEmptyKey",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "CannotFindPrevEmptyKey",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidInitialization",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "NotInitializing",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ReentrancyGuardReentrantCall",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "version",
        "type": "uint64"
      }
    ],
    "name": "Initialized",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "collection",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "enum LibOrder.Side",
        "name": "side",
        "type": "uint8"
      },
      {
        "internalType": "enum LibOrder.SaleKind",
        "name": "saleKind",
        "type": "uint8"
      }
    ],
    "name": "getBestOrder",
    "outputs": [
      {
        "components": [
          {
            "internalType": "enum LibOrder.Side",
            "name": "side",
            "type": "uint8"
          },
          {
            "internalType": "enum LibOrder.SaleKind",
            "name": "saleKind",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "maker",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "collection",
                "type": "address"
              },
              {
                "internalType": "uint96",
                "name": "amount",
                "type": "uint96"
              }
            ],
            "internalType": "struct LibOrder.Asset",
            "name": "nft",
            "type": "tuple"
          },
          {
            "internalType": "Price",
            "name": "price",
            "type": "uint128"
          },
          {
            "internalType": "uint64",
            "name": "expiry",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "salt",
            "type": "uint64"
          }
        ],
        "internalType": "struct LibOrder.Order",
        "name": "orderResult",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "collection",
        "type": "address"
      },
      {
        "internalType": "enum LibOrder.Side",
        "name": "side",
        "type": "uint8"
      }
    ],
    "name": "getBestPrice",
    "outputs": [
      {
        "internalType": "Price",
        "name": "price",
        "type": "uint128"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "collection",
        "type": "address"
      },
      {
        "internalType": "enum LibOrder.Side",
        "name": "side",
        "type": "uint8"
      },
      {
        "internalType": "Price",
        "name": "price",
        "type": "uint128"
      }
    ],
    "name": "getNextBestPrice",
    "outputs": [
      {
        "internalType": "Price",
        "name": "nextBestPrice",
        "type": "uint128"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "collection",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "tokenId",
        "type": "uint256"
      },
      {
        "internalType": "enum LibOrder.Side",
        "name": "side",
        "type": "uint8"
      },
      {
        "internalType": "enum LibOrder.SaleKind",
        "name": "saleKind",
        "type": "uint8"
      },
      {
        "internalType": "uint256",
        "name": "count",
        "type": "uint256"
      },
      {
        "internalType": "Price",
        "name": "price",
        "type": "uint128"
      },
      {
        "internalType": "OrderKey",
        "name": "firstOrderKey",
        "type": "bytes32"
      }
    ],
    "name": "getOrders",
    "outputs": [
      {
        "components": [
          {
            "internalType": "enum LibOrder.Side",
            "name": "side",
            "type": "uint8"
          },
          {
            "internalType": "enum LibOrder.SaleKind",
            "name": "saleKind",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "maker",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "collection",
                "type": "address"
              },
              {
                "internalType": "uint96",
                "name": "amount",
                "type": "uint96"
              }
            ],
            "internalType": "struct LibOrder.Asset",
            "name": "nft",
            "type": "tuple"
          },
          {
            "internalType": "Price",
            "name": "price",
            "type": "uint128"
          },
          {
            "internalType": "uint64",
            "name": "expiry",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "salt",
            "type": "uint64"
          }
        ],
        "internalType": "struct LibOrder.Order[]",
        "name": "resultOrders",
        "type": "tuple[]"
      },
      {
        "internalType": "OrderKey",
        "name": "nextOrderKey",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "enum LibOrder.Side",
        "name": "",
        "type": "uint8"
      },
      {
        "internalType": "Price",
        "name": "",
        "type": "uint128"
      }
    ],
    "name": "orderQueues",
    "outputs": [
      {
        "internalType": "OrderKey",
        "name": "head",
        "type": "bytes32"
      },
      {
        "internalType": "OrderKey",
        "name": "tail",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "OrderKey",
        "name": "",
        "type": "bytes32"
      }
    ],
    "name": "orders",
    "outputs": [
      {
        "components": [
          {
            "internalType": "enum LibOrder.Side",
            "name": "side",
            "type": "uint8"
          },
          {
            "internalType": "enum LibOrder.SaleKind",
            "name": "saleKind",
            "type": "uint8"
          },
          {
            "internalType": "address",
            "name": "maker",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "collection",
                "type": "address"
              },
              {
                "internalType": "uint96",
                "name": "amount",
                "type": "uint96"
              }
            ],
            "internalType": "struct LibOrder.Asset",
            "name": "nft",
            "type": "tuple"
          },
          {
            "internalType": "Price",
            "name": "price",
            "type": "uint128"
          },
          {
            "internalType": "uint64",
            "name": "expiry",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "salt",
            "type": "uint64"
          }
        ],
        "internalType": "struct LibOrder.Order",
        "name": "order",
        "type": "tuple"
      },
      {
        "internalType": "OrderKey",
        "name": "next",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      },
      {
        "internalType": "enum LibOrder.Side",
        "name": "",
        "type": "uint8"
      }
    ],
    "name": "priceTrees",
    "outputs": [
      {
        "internalType": "Price",
        "name": "root",
        "type": "uint128"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
]
